WEBVTT


00:00:01.310 --> 00:00:02.210
Hi Viewers,

00:00:02.210 --> 00:00:10.309
I am going to show you a demo on carpark web
application which I have hosted in Google

00:00:10.309 --> 00:00:12.400
cloud compute engine.

00:00:12.400 --> 00:00:18.250
url id is saravan-spring.com

00:00:18.250 --> 00:00:29.650
This is a default login screen.
I have utilized Spring Security with csrf

00:00:29.650 --> 00:00:32.950
token to provide high security.

00:00:32.950 --> 00:00:41.200
I have provided csrf token security. It means
it is highly safety.

00:00:41.200 --> 00:00:52.280
And any hackers cannot go into url directly
without validating the login screen.

00:00:52.280 --> 00:01:03.080
I am going to show you some screens of Internal
and External Users and SignUp screen.

00:01:03.080 --> 00:01:09.909
Any new user can sign up 
for his new user account.

00:01:09.909 --> 00:01:16.619
Tricky part is password encryption 
and setting the User type.

00:01:16.619 --> 00:01:27.819
I have intentionally typed some invalid values
to test hibernate validation will throw me error.

00:01:27.819 --> 00:01:38.399
The error is thrown. 
Email and Phone format is incorrect.

00:01:38.399 --> 00:01:51.159
I have utilized Hibernate validations.

00:01:51.159 --> 00:02:07.189
It is validating email format 
and 8 digit phone no.

00:02:07.189 --> 00:02:15.709
Hibernate validation. We don't have to write separate client side validation.

00:02:15.709 --> 00:02:25.269
Ok. Now I am giving the correct values. 
Let us see how it works.

00:02:25.269 --> 00:02:29.629
As you can see the user type cannot be 
modified by the external user.

00:02:29.629 --> 00:02:30.849
By default, new user are assigned 
to External user type.

00:02:30.849 --> 00:02:34.049
Only admin can configure his user type.

00:02:34.049 --> 00:02:49.840
I am going to show you how the user types
are dynamically listed.

00:02:49.840 --> 00:02:56.930
List of User types will be dynamically generated
based on user login.

00:02:56.930 --> 00:03:33.299
Admin user can see all the 3 user types.
Other users cannot change the user type

00:03:33.299 --> 00:03:39.280
I am encrypting the password for data safety.
I am utilizing encryption algorithm available

00:03:39.280 --> 00:03:45.299
in the spring framework.
Pls see the encryption part.

00:03:45.299 --> 00:04:01.549
This is the password encryption algorithm.
I am using the BcryptpasswordEncoder.

00:04:01.549 --> 00:04:10.030
Using that option I am encrypting the password
and store them in the database.

00:04:10.030 --> 00:04:16.209
Also I would like to show you, how I have
done the spring security.

00:04:16.209 --> 00:04:23.580
These are the available configurations for
spring security.

00:04:23.580 --> 00:04:28.919
By default, it will always prompt you the
login screen.

00:04:28.919 --> 00:04:32.280
And if it is successful, it goes to welcome
screen.

00:04:32.280 --> 00:04:39.310
If there is a failure, it goes to error screen.
And username and password are captured from

00:04:39.310 --> 00:04:45.020
the jsp page.
And it will be validated by the spring framework.

00:04:45.020 --> 00:04:51.000
We don't have to do any single coding.
What I just need to do is I have to maintain

00:04:51.000 --> 00:04:57.419
the user table.
I have to store the userName and password

00:04:57.419 --> 00:05:02.699
in the user table.
So automatically spring framework will validate

00:05:02.699 --> 00:05:08.960
and it will provide you the login status
on whether he is a valid user or not.

00:05:08.960 --> 00:05:12.180
Also I am using the csrf token.
In parallel, I have to configure csrf token

00:05:12.180 --> 00:05:16.810
in the jsp and so in ajax.

00:05:16.810 --> 00:05:29.660
I am maintaining the 
spring security configurations at the database
level rather than hardcoding in java file.

00:05:29.660 --> 00:05:38.039
I am utilizing one of the table userRole.
For each and every role, I am setting the

00:05:38.040 --> 00:06:01.800
access paths.

00:06:01.800 --> 00:06:26.099
I have provided all the valid values and pressing
the Add button.

00:06:26.099 --> 00:06:33.160
Once new user is created, then he can login
as an external user.

00:06:33.160 --> 00:06:54.819
He can see welcome screen.
Now he can logout and relogin again.

00:06:54.819 --> 00:07:19.190
He can see his details.
He can see menus related to external user.

00:07:19.190 --> 00:07:26.680
If he wishes he can change his password.

00:07:26.680 --> 00:08:49.240
Now that new user will login as a external
user, and he can see all the menus related

00:08:49.240 --> 00:09:05.579
to external user.
Now Admin user 
can login and he can convert his user type

00:09:05.579 --> 00:09:27.640
from external to internal.

00:09:27.640 --> 00:09:40.370
Now he can login and see his internal menus.
Menus are dynamically generated based on user

00:09:40.370 --> 00:09:54.990
type.
Now he cannot go back to external menus.

00:09:54.990 --> 00:10:08.760
Rather than creating two separate forms for
Add and Edit,

00:10:08.760 --> 00:10:24.510
I am managing both within the same form.
I am applying saveOrUpdate method for both.

00:10:24.510 --> 00:10:30.949
By doing this, I am eliminating code redundancy

